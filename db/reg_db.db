CREATE TABLE IF NOT EXISTS Teams (
    team_id INTEGER PRIMARY KEY AUTOINCREMENT,
    team_name TEXT NOT NULL,
    email TEXT NOT NULL,
    password TEXT NOT NULL,
    verified BOOL DEFAULT 0,
    ncr BOOL DEFAULT 0,
    individual BOOL DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Competitions table
CREATE TABLE IF NOT EXISTS Competitions (
    competition_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    description TEXT NOT NULL,
    eligibility TEXT NOT NULL,
    mode TEXT NOT NULL CHECK(mode IN ('Online', 'Hybrid', 'Offline')),
    individual BOOL DEFAULT 0
);

CREATE TRIGGER IF NOT EXISTS increment_user_id
AFTER INSERT ON Users
FOR EACH ROW
WHEN NEW.user_id IS NULL
BEGIN
    UPDATE Users
    SET user_id = (SELECT IFNULL(MAX(user_id), 0) + 1 FROM Users)
    WHERE id = NEW.id;
END;

-- Create Competitions_Users table (many-to-many relationship)
CREATE TABLE IF NOT EXISTS Competitions_Users (
    user_id INTEGER NOT NULL,
    competition_id INTEGER NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, competition_id),
    FOREIGN KEY (competition_id) REFERENCES Competitions(competition_id)
);

CREATE TABLE IF NOT EXISTS School_Participants (
    team_id INTEGER,
    user_id INTEGER,
    PRIMARY KEY (team_id, user_id),
    FOREIGN KEY (team_id) REFERENCES Teams(team_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);
